INSTANCE: 
         -> Instance Type: Defines Hardware - CPU,RAM,Storage,N/W Performance:
                      eg: t2.micro for - website

         -> Launch Templates: Save Configuration like Instance Type, Key-pair, Security Group, VPC etc
                          eg: Quickly launch multiple similar instances.
          
          -> Spot Requests: Unused EC2 Instance that AWS offers at 90% offer 
      
          * How Spot Instances Work:

          -> AWSâ€™s Perspective: AWS has extra capacity in its data centers (unused EC2 instances). 
                                Instead of letting that capacity remain idle, it offers it to customers at a discounted price.

          -> Customer Perspective: Customers can "bid" for these Spot Instances, but with one condition:
                                   If AWS needs the capacity back for on-demand or reserved users, your Spot Instance will be terminated with a 2-minute warning.

          -> Saving Plans:  If You know your business runs 10 EC2 instances consistently for the next 2 years.
                            Commit to a savings plan and save up to 66% on the cost.
          
          -> Reserved Instancce:  A company runs a production database 24/7 for 3 years, (up to 75%)
                                  They reserve an instance type (e.g., m5.large) for 3 years at a lower cost.

          -> Dedicated Host: Get full control of a physical server.
                             A dedicated host is a physical server fully allocated to your account. 
                             It gives more control over licensing and compliance requirements. 

          -> Capacity Reservation: Ensures EC2 capacity WHen u need the instance capacity Increases, 
                                eg: Big billion days Flikart get more users so it reserves capacity for 100 m5.large instances to handle expected traffic spikes.
==================================================================================================================================================================

KEY_PAIR: A set of 2 keys 
========= 
          Public Key: Stored on the EC2 instance.
          Private Key: Stored securely by you.
NOTE: 
-> AWS generates the key pair when you launch an EC2 instance, and you download the private key file (.pem file).
-> Keep the private key safe! If you lose it, you cannot log in to the EC2 instance.
-> Use the .pem file with an SSH client (like PuTTY or the terminal) to connect to the instance securely.

--------------------------------------------------------------------------------------------------------------------

SECURITY GROUP: A security group is a virtual firewall for your EC2 instance. It controls:
==============
                Inbound traffic: What can enter your instance.
                Outbound traffic: What can leave your instance.

NOTE: By default, AWS blocks all inbound traffic.To allow access, you must add rules. 

For example:
-> Allow SSH (port 22) from your IP address to log in.
-> Allow HTTP (port 80) to host a website.

Sample Rule Table:
===========================================================================================
Type	Protocol	Port Range	Source	Purpose
===========================================================================================
SSH	TCP	22	Your IP (e.g., 1.2.3.4/32)	To allow secure login.
HTTP	TCP	80	0.0.0.0/0	To allow public web traffic.
===========================================================================================

ELASTIC-IP: 
          -> To make your Pulic IP - Static we use Elastic IP.
          -> Suppose you have stopped your VM and Started again, then the Public IP won't change.
==================================================================================================
AMI (Amazon Machine Image):

It is a pre-configured template that provides the information required to launch an EC2 instance. It includes:

-> OS (Operating System): Linux, Windows, etc.
-> Software/Applications: Web servers, databases, custom tools.
-> Configuration Settings: Security, permissions, or application configurations.

==========================================================================================================================================

Key Features of AMI:
---------------------
-> Customizable: You can create your own AMI after customizing an instance.
-> Example: Install software, make configurations, and save it as a reusable AMI.
-> Shareable: AMIs can be shared across accounts or regions.
-> Region-Specific: AMIs are specific to an AWS region but can be copied to other regions.

Real-Life Example of AMI Usage:
==================================

-> You want to set up 5 web servers with the same configuration.
-> You create and configure one EC2 instance with all software and settings.
-> Save this instance as an AMI.
-> Use the AMI to launch 5 identical EC2 instances in minutes.
==========================================================================================================================================

What is an AMI Catalog?
---------------------------

-> The AMI Catalog is a collection of AMIs available for use in AWS. It includes:

-> AWS Marketplace AMIs: Pre-configured images provided by AWS partners (e.g., WordPress, Jenkins).
-> Community AMIs: Shared AMIs created by other AWS users.
-> AWS-Provided AMIs: Official AMIs provided by AWS (e.g., Amazon Linux, Ubuntu).
-> Your AMIs: Custom AMIs you create and store in your account.

=============================================================================================================================================
